# Integration Tests - Full database integration testing
name: Integration Tests

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]
  workflow_call: # Allow this workflow to be called by other workflows

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    # PostgreSQL service for database connectivity
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: timedeposits
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL to start..."
            sleep 2
          done
          echo "PostgreSQL is ready!"

      - name: Build application
        run: npm run build --if-present

      - name: Run integration tests
        run: npm run test:integration
        env:
          # Database connection environment variables for CI
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_NAME: timedeposits
          NODE_ENV: test

      - name: Upload coverage to Codecov (Node 20.x only)
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: integration-tests
          name: integration-tests-coverage
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
